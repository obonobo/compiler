package token

//
// CODEGEN - DO NOT MODIFY
//
// TOOL: /home/ethanbenabou/git/esac/resources/a2/workspace/tool.go
// GRAMMAR: /home/ethanbenabou/git/esac/resources/a2/workspace/COMP442.grammar.BNF.grm.noebnf.noambiguity.pure
//
// This file was generated by a tool, it should not be modified by hand. Instead,
// modify the grammar file listed above and rerun the codegen tool.
//

import (
	"fmt"
	"strings"
)

type Kind string

type StringSet = map[string]struct{}

type KindSet = map[Kind]struct{}

type Rules = map[Kind][]Rule

type Rule struct {
	LHS Kind   // The Left Hand Side nonterminal symbol for this rule
	RHS []Kind // The RHS sentential form for this rule
}

const (
	EPSILON Kind = "EPSILON" // Empty string ''
	ASSIGN  Kind = "assign"  // Assignment operator '='
	ARROW   Kind = "arrow"   // Right-pointing arrow operator '->'

	EQ    Kind = "eq"    // Arithmetic operator: equality '=='
	PLUS  Kind = "plus"  // Arithmetic operator: addition '+'
	MINUS Kind = "minus" // Arithmetic operator: subtraction '-'
	MULT  Kind = "mult"  // Arithmetic operator: multiplication '*'
	DIV   Kind = "div"   // Arithmetic operator: division '/'

	LT    Kind = "lt"    // Comparison operator: less than '<'
	NOTEQ Kind = "noteq" // Comparison operator: not equal '<>'
	LEQ   Kind = "leq"   // Comparison operator: less than or equal '<='
	GT    Kind = "gt"    // Comparison operator: greater than '>'
	GEQ   Kind = "geq"   // Comparison operator: greater than or equal '>='

	OR  Kind = "or"  // Logical operator: OR '|'
	AND Kind = "and" // Logical operator: AND '&'
	NOT Kind = "not" // Logical operator: NOT '!'

	OPENPAR   Kind = "openpar"   // Bracket: opening parenthesis '('
	CLOSEPAR  Kind = "closepar"  // Bracket: closing parenthesis ')'
	OPENCUBR  Kind = "opencubr"  // Bracket: opening curly bracket '{'
	CLOSECUBR Kind = "closecubr" // Bracket: closing curly bracket '}'
	OPENSQBR  Kind = "opensqbr"  // Bracket: opening square bracket '['
	CLOSESQBR Kind = "closesqbr" // Bracket: closing square bracket ']'

	DOT        Kind = "dot"        // Period '.'
	COMMA      Kind = "comma"      // Comma ','
	SEMI       Kind = "semi"       // Semicolon ';'
	COLON      Kind = "colon"      // Colon ':'
	COLONCOLON Kind = "coloncolon" // Double colon '::'

	INLINECMT   Kind = "inlinecmt"   // Single-line comment '// ... \n'
	BLOCKCMT    Kind = "blockcmt"    // Multi-line comment '/* ... */'
	CLOSEINLINE Kind = "closeinline" // End of an inline comment '\n'
	CLOSEBLOCK  Kind = "closeblock"  // End of a block comment '*/'
	OPENINLINE  Kind = "openinline"  // Start of an inline comment '//'
	OPENBLOCK   Kind = "openblock"   // Start of a block comment '/*'

	ID       Kind = "id"       // Identifier 'exampleId_123'
	INTNUM   Kind = "intnum"   // Integer '123'
	FLOATNUM Kind = "floatnum" // Floating-point number '1.23'

	IF       Kind = "if"       // Reserved word 'if'
	THEN     Kind = "then"     // Reserved word 'then'
	ELSE     Kind = "else"     // Reserved word 'else'
	INTEGER  Kind = "integer"  // Reserved word 'integer'
	FLOAT    Kind = "float"    // Reserved word 'float'
	VOID     Kind = "void"     // Reserved word 'void'
	PUBLIC   Kind = "public"   // Reserved word 'public'
	PRIVATE  Kind = "private"  // Reserved word 'private'
	FUNC     Kind = "func"     // Reserved word 'func'
	VAR      Kind = "var"      // Reserved word 'var'
	STRUCT   Kind = "struct"   // Reserved word 'struct'
	WHILE    Kind = "while"    // Reserved word 'while'
	READ     Kind = "read"     // Reserved word 'read'
	WRITE    Kind = "write"    // Reserved word 'write'
	RETURN   Kind = "return"   // Reserved word 'return'
	SELF     Kind = "self"     // Reserved word 'self'
	INHERITS Kind = "inherits" // Reserved word 'inherits'
	LET      Kind = "let"      // Reserved word 'let'
	IMPL     Kind = "impl"     // Reserved word 'impl'

	INVALIDID           Kind = "invalidid"           // Error token
	INVALIDNUM          Kind = "invalidnum"          // Error token
	INVALIDCHAR         Kind = "invalidchar"         // Error token
	UNTERMINATEDCOMMENT Kind = "unterminatedcomment" // Error token
)

const (
	STRUCTDECL                        Kind = "<structDecl>"
	OPT_STRUCTDECL2                   Kind = "<opt-structDecl2>"
	STATBLOCK                         Kind = "<statBlock>"
	APARAMSTAIL                       Kind = "<aParamsTail>"
	REPT_IMPLDEF3                     Kind = "<rept-implDef3>"
	SOMETHING                         Kind = "<something>"
	ASSIGNSTAT                        Kind = "<assignStat>"
	RELOP                             Kind = "<relOp>"
	MEMBERDECL                        Kind = "<memberDecl>"
	RETURNTYPE                        Kind = "<returnType>"
	REPT_VARDECL4                     Kind = "<rept-varDecl4>"
	RELEXPR                           Kind = "<relExpr>"
	SIGN                              Kind = "<sign>"
	REPT_FPARAMS4                     Kind = "<rept-fParams4>"
	FUNCDECL                          Kind = "<funcDecl>"
	ASSIGNOP                          Kind = "<assignOp>"
	ARITHEXPR                         Kind = "<arithExpr>"
	PROG                              Kind = "<prog>"
	REPT_FUNCBODY1                    Kind = "<rept-funcBody1>"
	ASSIGNSTATORFUNCCALL_DISAMBIGUATE Kind = "<assignStatOrFuncCall-disambiguate>"
	START                             Kind = "<START>"
	FUNCHEAD                          Kind = "<funcHead>"
	MORE_ASSIGN                       Kind = "<more-assign>"
	ANOTHER                           Kind = "<another>"
	ADDOP                             Kind = "<addOp>"
	REPT_PROG0                        Kind = "<rept-prog0>"
	IMPLDEF                           Kind = "<implDef>"
	MORE_INDICE                       Kind = "<more-indice>"
	RIGHTREC_TERM                     Kind = "<rightrec-term>"
	STRUCTORIMPLORFUNC                Kind = "<structOrImplOrFunc>"
	VARDECL                           Kind = "<varDecl>"
	FPARAMS                           Kind = "<fParams>"
	REPT_FPARAMSTAIL4                 Kind = "<rept-fParamsTail4>"
	EXPR                              Kind = "<expr>"
	SOMETHING_FUNC                    Kind = "<something-func>"
	REPT_STRUCTDECL4                  Kind = "<rept-structDecl4>"
	ARRAYSIZE                         Kind = "<arraySize>"
	ASSIGNSTATORFUNCCALL              Kind = "<assignStatOrFuncCall>"
	INDICE                            Kind = "<indice>"
	ARRAYSIZE_FACTORIZED              Kind = "<arraySize-factorized>"
	FPARAMSTAIL                       Kind = "<fParamsTail>"
	FUNCBODY                          Kind = "<funcBody>"
	VARDECLORSTAT                     Kind = "<varDeclOrStat>"
	APARAMS                           Kind = "<aParams>"
	FUNCTIONCALL                      Kind = "<functionCall>"
	TERM                              Kind = "<term>"
	REPT_FPARAMS3                     Kind = "<rept-fParams3>"
	MORE_FUNC                         Kind = "<more-func>"
	VARORFUNCCALL_DISAMBIGUATE        Kind = "<varOrFuncCall-disambiguate>"
	ARITHORRELEXPR_DISAMBIGUATE       Kind = "<arithOrRelExpr-disambiguate>"
	VISIBILITY                        Kind = "<visibility>"
	REPT_OPT_STRUCTDECL22             Kind = "<rept-opt-structDecl22>"
	REPT_APARAMS1                     Kind = "<rept-aParams1>"
	STATEMENT                         Kind = "<statement>"
	FACTOR                            Kind = "<factor>"
	TYPE                              Kind = "<type>"
	REPT_STATBLOCK1                   Kind = "<rept-statBlock1>"
	FUNCDEF                           Kind = "<funcDef>"
	VARIABLE                          Kind = "<variable>"
	VARORFUNCCALL                     Kind = "<varOrFuncCall>"
	RIGHTREC_ARITHEXPR                Kind = "<rightrec-arithExpr>"
	MULTOP                            Kind = "<multOp>"
)

var nonterminals = NONTERMINALS()
var NONTERMINALS = func() KindSet {
	return KindSet{
		STRUCTDECL:                        {},
		REPT_FPARAMSTAIL4:                 {},
		STATEMENT:                         {},
		INDICE:                            {},
		ARRAYSIZE_FACTORIZED:              {},
		TERM:                              {},
		REPT_OPT_STRUCTDECL22:             {},
		TYPE:                              {},
		VARORFUNCCALL:                     {},
		ARITHORRELEXPR_DISAMBIGUATE:       {},
		REPT_IMPLDEF3:                     {},
		ASSIGNSTAT:                        {},
		START:                             {},
		REPT_PROG0:                        {},
		SIGN:                              {},
		MORE_INDICE:                       {},
		VARORFUNCCALL_DISAMBIGUATE:        {},
		RIGHTREC_ARITHEXPR:                {},
		MORE_ASSIGN:                       {},
		ANOTHER:                           {},
		REPT_STRUCTDECL4:                  {},
		FUNCTIONCALL:                      {},
		RETURNTYPE:                        {},
		APARAMS:                           {},
		VISIBILITY:                        {},
		FUNCDEF:                           {},
		FUNCHEAD:                          {},
		IMPLDEF:                           {},
		REPT_FUNCBODY1:                    {},
		MORE_FUNC:                         {},
		RELEXPR:                           {},
		ASSIGNOP:                          {},
		FUNCBODY:                          {},
		REPT_APARAMS1:                     {},
		REPT_STATBLOCK1:                   {},
		RELOP:                             {},
		MEMBERDECL:                        {},
		SOMETHING_FUNC:                    {},
		ARRAYSIZE:                         {},
		FPARAMSTAIL:                       {},
		MULTOP:                            {},
		OPT_STRUCTDECL2:                   {},
		APARAMSTAIL:                       {},
		SOMETHING:                         {},
		RIGHTREC_TERM:                     {},
		VARIABLE:                          {},
		ASSIGNSTATORFUNCCALL_DISAMBIGUATE: {},
		ADDOP:                             {},
		EXPR:                              {},
		VARDECLORSTAT:                     {},
		REPT_FPARAMS4:                     {},
		ARITHEXPR:                         {},
		FPARAMS:                           {},
		REPT_FPARAMS3:                     {},
		FACTOR:                            {},
		REPT_VARDECL4:                     {},
		FUNCDECL:                          {},
		PROG:                              {},
		ASSIGNSTATORFUNCCALL:              {},
		STATBLOCK:                         {},
		STRUCTORIMPLORFUNC:                {},
		VARDECL:                           {},
	}
}

func IsNonterminal(symbol Kind) bool {
	_, ok := nonterminals[symbol]
	return ok
}

var terminals = TERMINALS()
var TERMINALS = func() KindSet {
	return KindSet{
		EPSILON:   {},
		OPENPAR:   {},
		CLOSEPAR:  {},
		OPENCUBR:  {},
		CLOSECUBR: {},
		OPENSQBR:  {},
		CLOSESQBR: {},
		AND:       {},
		FLOAT:     {},
		DIV:       {},
		PUBLIC:    {},
		ELSE:      {},
		INTEGER:   {},
		INTNUM:    {},
		WHILE:     {},
		ID:        {},
		EQ:        {},
		VOID:      {},
		COMMA:     {},
		LET:       {},
		MULT:      {},
		SEMI:      {},
		THEN:      {},
		STRUCT:    {},
		FLOATNUM:  {},
		WRITE:     {},
		GT:        {},
		PLUS:      {},
		IMPL:      {},
		MINUS:     {},
		ASSIGN:    {},
		LEQ:       {},
		OR:        {},
		PRIVATE:   {},
		IF:        {},
		COLON:     {},
		NOTEQ:     {},
		LT:        {},
		DOT:       {},
		GEQ:       {},
		READ:      {},
		RETURN:    {},
		NOT:       {},
		INHERITS:  {},
		FUNC:      {},
	}
}

func IsTerminal(symbol Kind) bool {
	_, ok := terminals[symbol]
	return ok
}

// Returns a printout of the rules
func RulesToString(rules Rules) string {
	ret := ""
	for _, v := range rules {
		for _, r := range v {
			rhs := make([]string, 0, len(r.RHS))
			for _, k := range r.RHS {
				rhs = append(rhs, string(k))
			}
			ret += fmt.Sprintf("%v ::= %v\n", r.LHS, strings.Join(rhs, " "))
		}
	}
	return ret
}

var rules = RULES()
var RULES = func() Rules {
	return Rules{
		FUNCDEF:                           []Rule{{FUNCDEF, []Kind{FUNCHEAD, FUNCBODY}}},
		MORE_INDICE:                       []Rule{{MORE_INDICE, []Kind{INDICE, MORE_INDICE}}, {MORE_INDICE, []Kind{EPSILON}}},
		VARIABLE:                          []Rule{{VARIABLE, []Kind{ID, MORE_INDICE, SOMETHING}}},
		ARITHORRELEXPR_DISAMBIGUATE:       []Rule{{ARITHORRELEXPR_DISAMBIGUATE, []Kind{RELOP, ARITHEXPR}}, {ARITHORRELEXPR_DISAMBIGUATE, []Kind{EPSILON}}},
		FPARAMS:                           []Rule{{FPARAMS, []Kind{ID, COLON, TYPE, REPT_FPARAMS3, REPT_FPARAMS4}}, {FPARAMS, []Kind{EPSILON}}},
		REPT_FPARAMS3:                     []Rule{{REPT_FPARAMS3, []Kind{ARRAYSIZE, REPT_FPARAMS3}}, {REPT_FPARAMS3, []Kind{EPSILON}}},
		START:                             []Rule{{START, []Kind{PROG}}},
		IMPLDEF:                           []Rule{{IMPLDEF, []Kind{IMPL, ID, OPENCUBR, REPT_IMPLDEF3, CLOSECUBR}}},
		REPT_APARAMS1:                     []Rule{{REPT_APARAMS1, []Kind{APARAMSTAIL, REPT_APARAMS1}}, {REPT_APARAMS1, []Kind{EPSILON}}},
		ADDOP:                             []Rule{{ADDOP, []Kind{PLUS}}, {ADDOP, []Kind{MINUS}}, {ADDOP, []Kind{OR}}},
		ARRAYSIZE:                         []Rule{{ARRAYSIZE, []Kind{OPENSQBR, ARRAYSIZE_FACTORIZED}}},
		ASSIGNSTATORFUNCCALL_DISAMBIGUATE: []Rule{{ASSIGNSTATORFUNCCALL_DISAMBIGUATE, []Kind{INDICE, MORE_INDICE, MORE_ASSIGN}}, {ASSIGNSTATORFUNCCALL_DISAMBIGUATE, []Kind{OPENPAR, APARAMS, CLOSEPAR, MORE_FUNC}}, {ASSIGNSTATORFUNCCALL_DISAMBIGUATE, []Kind{MORE_ASSIGN}}},
		SOMETHING:                         []Rule{{SOMETHING, []Kind{DOT, VARORFUNCCALL, ID, MORE_INDICE}}, {SOMETHING, []Kind{EPSILON}}},
		REPT_STATBLOCK1:                   []Rule{{REPT_STATBLOCK1, []Kind{STATEMENT, REPT_STATBLOCK1}}, {REPT_STATBLOCK1, []Kind{EPSILON}}},
		RIGHTREC_TERM:                     []Rule{{RIGHTREC_TERM, []Kind{MULTOP, FACTOR, RIGHTREC_TERM}}, {RIGHTREC_TERM, []Kind{EPSILON}}},
		REPT_PROG0:                        []Rule{{REPT_PROG0, []Kind{STRUCTORIMPLORFUNC, REPT_PROG0}}, {REPT_PROG0, []Kind{EPSILON}}},
		FUNCDECL:                          []Rule{{FUNCDECL, []Kind{FUNCHEAD, SEMI}}},
		APARAMS:                           []Rule{{APARAMS, []Kind{EXPR, REPT_APARAMS1}}, {APARAMS, []Kind{EPSILON}}},
		STATEMENT:                         []Rule{{STATEMENT, []Kind{ASSIGNSTATORFUNCCALL, SEMI}}, {STATEMENT, []Kind{IF, OPENPAR, RELEXPR, CLOSEPAR, THEN, STATBLOCK, ELSE, STATBLOCK, SEMI}}, {STATEMENT, []Kind{WHILE, OPENPAR, RELEXPR, CLOSEPAR, STATBLOCK, SEMI}}, {STATEMENT, []Kind{READ, OPENPAR, VARIABLE, CLOSEPAR, SEMI}}, {STATEMENT, []Kind{WRITE, OPENPAR, EXPR, CLOSEPAR, SEMI}}, {STATEMENT, []Kind{RETURN, OPENPAR, EXPR, CLOSEPAR, SEMI}}},
		VARORFUNCCALL:                     []Rule{{VARORFUNCCALL, []Kind{ID, VARORFUNCCALL_DISAMBIGUATE}}},
		SIGN:                              []Rule{{SIGN, []Kind{PLUS}}, {SIGN, []Kind{MINUS}}},
		RETURNTYPE:                        []Rule{{RETURNTYPE, []Kind{TYPE}}, {RETURNTYPE, []Kind{VOID}}},
		REPT_STRUCTDECL4:                  []Rule{{REPT_STRUCTDECL4, []Kind{VISIBILITY, MEMBERDECL, REPT_STRUCTDECL4}}, {REPT_STRUCTDECL4, []Kind{EPSILON}}},
		RELEXPR:                           []Rule{{RELEXPR, []Kind{ARITHEXPR, RELOP, ARITHEXPR}}},
		APARAMSTAIL:                       []Rule{{APARAMSTAIL, []Kind{COMMA, EXPR}}},
		TYPE:                              []Rule{{TYPE, []Kind{INTEGER}}, {TYPE, []Kind{FLOAT}}, {TYPE, []Kind{ID}}},
		ANOTHER:                           []Rule{{ANOTHER, []Kind{DOT, VARORFUNCCALL}}, {ANOTHER, []Kind{EPSILON}}},
		SOMETHING_FUNC:                    []Rule{{SOMETHING_FUNC, []Kind{DOT, VARORFUNCCALL, ID, OPENPAR, APARAMS, CLOSEPAR}}, {SOMETHING_FUNC, []Kind{EPSILON}}},
		INDICE:                            []Rule{{INDICE, []Kind{OPENSQBR, ARITHEXPR, CLOSESQBR}}},
		ARRAYSIZE_FACTORIZED:              []Rule{{ARRAYSIZE_FACTORIZED, []Kind{CLOSESQBR}}, {ARRAYSIZE_FACTORIZED, []Kind{INTNUM, CLOSESQBR}}},
		MEMBERDECL:                        []Rule{{MEMBERDECL, []Kind{FUNCDECL}}, {MEMBERDECL, []Kind{VARDECL}}},
		VARDECL:                           []Rule{{VARDECL, []Kind{LET, ID, COLON, TYPE, REPT_VARDECL4, SEMI}}},
		FUNCHEAD:                          []Rule{{FUNCHEAD, []Kind{FUNC, ID, OPENPAR, FPARAMS, CLOSEPAR, ARROW, RETURNTYPE}}},
		REPT_FPARAMS4:                     []Rule{{REPT_FPARAMS4, []Kind{FPARAMSTAIL, REPT_FPARAMS4}}, {REPT_FPARAMS4, []Kind{EPSILON}}},
		REPT_FPARAMSTAIL4:                 []Rule{{REPT_FPARAMSTAIL4, []Kind{ARRAYSIZE, REPT_FPARAMSTAIL4}}, {REPT_FPARAMSTAIL4, []Kind{EPSILON}}},
		STRUCTORIMPLORFUNC:                []Rule{{STRUCTORIMPLORFUNC, []Kind{STRUCTDECL}}, {STRUCTORIMPLORFUNC, []Kind{IMPLDEF}}, {STRUCTORIMPLORFUNC, []Kind{FUNCDEF}}},
		REPT_OPT_STRUCTDECL22:             []Rule{{REPT_OPT_STRUCTDECL22, []Kind{COMMA, ID, REPT_OPT_STRUCTDECL22}}, {REPT_OPT_STRUCTDECL22, []Kind{EPSILON}}},
		MORE_ASSIGN:                       []Rule{{MORE_ASSIGN, []Kind{DOT, ASSIGNSTATORFUNCCALL}}, {MORE_ASSIGN, []Kind{ASSIGNOP, EXPR, SEMI}}},
		MORE_FUNC:                         []Rule{{MORE_FUNC, []Kind{DOT, ASSIGNSTATORFUNCCALL}}, {MORE_FUNC, []Kind{SEMI}}},
		ASSIGNSTAT:                        []Rule{{ASSIGNSTAT, []Kind{VARIABLE, ASSIGNOP, EXPR}}},
		STATBLOCK:                         []Rule{{STATBLOCK, []Kind{OPENCUBR, REPT_STATBLOCK1, CLOSECUBR}}, {STATBLOCK, []Kind{STATEMENT}}, {STATBLOCK, []Kind{EPSILON}}},
		VISIBILITY:                        []Rule{{VISIBILITY, []Kind{PUBLIC}}, {VISIBILITY, []Kind{PRIVATE}}},
		VARDECLORSTAT:                     []Rule{{VARDECLORSTAT, []Kind{VARDECL}}, {VARDECLORSTAT, []Kind{STATEMENT}}},
		MULTOP:                            []Rule{{MULTOP, []Kind{MULT}}, {MULTOP, []Kind{DIV}}, {MULTOP, []Kind{AND}}},
		REPT_FUNCBODY1:                    []Rule{{REPT_FUNCBODY1, []Kind{VARDECLORSTAT, REPT_FUNCBODY1}}, {REPT_FUNCBODY1, []Kind{EPSILON}}},
		RELOP:                             []Rule{{RELOP, []Kind{EQ}}, {RELOP, []Kind{NOTEQ}}, {RELOP, []Kind{LT}}, {RELOP, []Kind{GT}}, {RELOP, []Kind{LEQ}}, {RELOP, []Kind{GEQ}}},
		STRUCTDECL:                        []Rule{{STRUCTDECL, []Kind{STRUCT, ID, OPT_STRUCTDECL2, OPENCUBR, REPT_STRUCTDECL4, CLOSECUBR, SEMI}}},
		REPT_IMPLDEF3:                     []Rule{{REPT_IMPLDEF3, []Kind{FUNCDEF, REPT_IMPLDEF3}}, {REPT_IMPLDEF3, []Kind{EPSILON}}},
		OPT_STRUCTDECL2:                   []Rule{{OPT_STRUCTDECL2, []Kind{INHERITS, ID, REPT_OPT_STRUCTDECL22}}, {OPT_STRUCTDECL2, []Kind{EPSILON}}},
		FUNCTIONCALL:                      []Rule{{FUNCTIONCALL, []Kind{ID, OPENPAR, APARAMS, CLOSEPAR, SOMETHING_FUNC}}},
		RIGHTREC_ARITHEXPR:                []Rule{{RIGHTREC_ARITHEXPR, []Kind{ADDOP, TERM, RIGHTREC_ARITHEXPR}}, {RIGHTREC_ARITHEXPR, []Kind{EPSILON}}},
		ASSIGNOP:                          []Rule{{ASSIGNOP, []Kind{ASSIGN}}},
		PROG:                              []Rule{{PROG, []Kind{REPT_PROG0}}},
		REPT_VARDECL4:                     []Rule{{REPT_VARDECL4, []Kind{ARRAYSIZE, REPT_VARDECL4}}, {REPT_VARDECL4, []Kind{EPSILON}}},
		VARORFUNCCALL_DISAMBIGUATE:        []Rule{{VARORFUNCCALL_DISAMBIGUATE, []Kind{OPENPAR, APARAMS, CLOSEPAR, ANOTHER}}, {VARORFUNCCALL_DISAMBIGUATE, []Kind{INDICE, MORE_INDICE, ANOTHER}}, {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}}},
		EXPR:                              []Rule{{EXPR, []Kind{ARITHEXPR, ARITHORRELEXPR_DISAMBIGUATE}}},
		FUNCBODY:                          []Rule{{FUNCBODY, []Kind{OPENCUBR, REPT_FUNCBODY1, CLOSECUBR}}},
		ASSIGNSTATORFUNCCALL:              []Rule{{ASSIGNSTATORFUNCCALL, []Kind{ID, ASSIGNSTATORFUNCCALL_DISAMBIGUATE}}},
		TERM:                              []Rule{{TERM, []Kind{FACTOR, RIGHTREC_TERM}}},
		FPARAMSTAIL:                       []Rule{{FPARAMSTAIL, []Kind{COMMA, ID, COLON, TYPE, REPT_FPARAMSTAIL4}}},
		FACTOR:                            []Rule{{FACTOR, []Kind{VARORFUNCCALL}}, {FACTOR, []Kind{INTNUM}}, {FACTOR, []Kind{FLOATNUM}}, {FACTOR, []Kind{OPENPAR, ARITHEXPR, CLOSEPAR}}, {FACTOR, []Kind{NOT, FACTOR}}, {FACTOR, []Kind{SIGN, FACTOR}}},
		ARITHEXPR:                         []Rule{{ARITHEXPR, []Kind{TERM, RIGHTREC_ARITHEXPR}}},
	}
}

var FIRSTS = func() map[Kind]KindSet {
	return map[Kind]KindSet{
		ASSIGNSTATORFUNCCALL:              {ID: {}},
		INDICE:                            {OPENSQBR: {}},
		FACTOR:                            {OPENPAR: {}, NOT: {}, PLUS: {}, MINUS: {}, ID: {}, INTNUM: {}, FLOATNUM: {}},
		SIGN:                              {PLUS: {}, MINUS: {}},
		ARRAYSIZE:                         {OPENSQBR: {}},
		FPARAMSTAIL:                       {COMMA: {}},
		FUNCHEAD:                          {FUNC: {}},
		ARITHEXPR:                         {FLOATNUM: {}, OPENPAR: {}, NOT: {}, PLUS: {}, MINUS: {}, ID: {}, INTNUM: {}},
		COMMA:                             {COMMA: {}},
		START:                             {STRUCT: {}, IMPL: {}, FUNC: {}, EPSILON: {}},
		EXPR:                              {FLOATNUM: {}, OPENPAR: {}, NOT: {}, PLUS: {}, MINUS: {}, ID: {}, INTNUM: {}},
		ARRAYSIZE_FACTORIZED:              {CLOSESQBR: {}, INTNUM: {}},
		MULTOP:                            {MULT: {}, DIV: {}, AND: {}},
		LEQ:                               {LEQ: {}},
		REPT_FPARAMSTAIL4:                 {EPSILON: {}, OPENSQBR: {}},
		CLOSESQBR:                         {CLOSESQBR: {}},
		EQ:                                {EQ: {}},
		SEMI:                              {SEMI: {}},
		MEMBERDECL:                        {FUNC: {}, LET: {}},
		IF:                                {IF: {}},
		OPT_STRUCTDECL2:                   {INHERITS: {}, EPSILON: {}},
		INTEGER:                           {INTEGER: {}},
		PROG:                              {FUNC: {}, EPSILON: {}, STRUCT: {}, IMPL: {}},
		MORE_ASSIGN:                       {DOT: {}, ASSIGN: {}},
		TYPE:                              {INTEGER: {}, FLOAT: {}, ID: {}},
		ASSIGN:                            {ASSIGN: {}},
		REPT_FUNCBODY1:                    {ID: {}, IF: {}, WHILE: {}, READ: {}, WRITE: {}, RETURN: {}, EPSILON: {}, LET: {}},
		FUNCTIONCALL:                      {ID: {}},
		INTNUM:                            {INTNUM: {}},
		REPT_PROG0:                        {STRUCT: {}, IMPL: {}, FUNC: {}, EPSILON: {}},
		COLON:                             {COLON: {}},
		RELEXPR:                           {MINUS: {}, ID: {}, INTNUM: {}, FLOATNUM: {}, OPENPAR: {}, NOT: {}, PLUS: {}},
		IMPL:                              {IMPL: {}},
		STRUCT:                            {STRUCT: {}},
		OPENSQBR:                          {OPENSQBR: {}},
		DIV:                               {DIV: {}},
		VARORFUNCCALL:                     {ID: {}},
		VARDECLORSTAT:                     {IF: {}, WHILE: {}, READ: {}, WRITE: {}, RETURN: {}, LET: {}, ID: {}},
		VISIBILITY:                        {PUBLIC: {}, PRIVATE: {}},
		MINUS:                             {MINUS: {}},
		PLUS:                              {PLUS: {}},
		PRIVATE:                           {PRIVATE: {}},
		STRUCTORIMPLORFUNC:                {FUNC: {}, STRUCT: {}, IMPL: {}},
		WRITE:                             {WRITE: {}},
		WHILE:                             {WHILE: {}},
		MORE_FUNC:                         {DOT: {}, SEMI: {}},
		REPT_STRUCTDECL4:                  {PUBLIC: {}, PRIVATE: {}, EPSILON: {}},
		REPT_FPARAMS4:                     {COMMA: {}, EPSILON: {}},
		REPT_VARDECL4:                     {OPENSQBR: {}, EPSILON: {}},
		FLOATNUM:                          {FLOATNUM: {}},
		NOTEQ:                             {NOTEQ: {}},
		GT:                                {GT: {}},
		SOMETHING_FUNC:                    {DOT: {}, EPSILON: {}},
		NOT:                               {NOT: {}},
		OPENPAR:                           {OPENPAR: {}},
		VOID:                              {VOID: {}},
		VARORFUNCCALL_DISAMBIGUATE:        {EPSILON: {}, OPENPAR: {}, OPENSQBR: {}, DOT: {}},
		STATBLOCK:                         {READ: {}, WRITE: {}, RETURN: {}, EPSILON: {}, OPENCUBR: {}, ID: {}, IF: {}, WHILE: {}},
		EPSILON:                           {EPSILON: {}},
		ELSE:                              {ELSE: {}},
		RIGHTREC_ARITHEXPR:                {PLUS: {}, MINUS: {}, OR: {}, EPSILON: {}},
		FLOAT:                             {FLOAT: {}},
		STATEMENT:                         {IF: {}, WHILE: {}, READ: {}, WRITE: {}, RETURN: {}, ID: {}},
		FUNCDEF:                           {FUNC: {}},
		ASSIGNSTATORFUNCCALL_DISAMBIGUATE: {DOT: {}, ASSIGN: {}, OPENSQBR: {}, OPENPAR: {}},
		ASSIGNOP:                          {ASSIGN: {}},
		READ:                              {READ: {}},
		VARIABLE:                          {ID: {}},
		VARDECL:                           {LET: {}},
		FUNCDECL:                          {FUNC: {}},
		THEN:                              {THEN: {}},
		ANOTHER:                           {DOT: {}, EPSILON: {}},
		ASSIGNSTAT:                        {ID: {}},
		REPT_FPARAMS3:                     {OPENSQBR: {}, EPSILON: {}},
		GEQ:                               {GEQ: {}},
		CLOSEPAR:                          {CLOSEPAR: {}},
		CLOSECUBR:                         {CLOSECUBR: {}},
		MULT:                              {MULT: {}},
		MORE_INDICE:                       {OPENSQBR: {}, EPSILON: {}},
		RETURNTYPE:                        {FLOAT: {}, ID: {}, VOID: {}, INTEGER: {}},
		LT:                                {LT: {}},
		ADDOP:                             {OR: {}, PLUS: {}, MINUS: {}},
		APARAMSTAIL:                       {COMMA: {}},
		IMPLDEF:                           {IMPL: {}},
		ARITHORRELEXPR_DISAMBIGUATE:       {EQ: {}, NOTEQ: {}, LT: {}, GT: {}, LEQ: {}, GEQ: {}, EPSILON: {}},
		REPT_IMPLDEF3:                     {FUNC: {}, EPSILON: {}},
		LET:                               {LET: {}},
		FPARAMS:                           {EPSILON: {}, ID: {}},
		SOMETHING:                         {DOT: {}, EPSILON: {}},
		REPT_OPT_STRUCTDECL22:             {COMMA: {}, EPSILON: {}},
		RELOP:                             {NOTEQ: {}, LT: {}, GT: {}, LEQ: {}, GEQ: {}, EQ: {}},
		PUBLIC:                            {PUBLIC: {}},
		REPT_STATBLOCK1:                   {WHILE: {}, READ: {}, WRITE: {}, RETURN: {}, EPSILON: {}, ID: {}, IF: {}},
		APARAMS:                           {ID: {}, INTNUM: {}, FLOATNUM: {}, OPENPAR: {}, NOT: {}, PLUS: {}, MINUS: {}, EPSILON: {}},
		TERM:                              {PLUS: {}, MINUS: {}, ID: {}, INTNUM: {}, FLOATNUM: {}, OPENPAR: {}, NOT: {}},
		DOT:                               {DOT: {}},
		RETURN:                            {RETURN: {}},
		RIGHTREC_TERM:                     {MULT: {}, DIV: {}, AND: {}, EPSILON: {}},
		AND:                               {AND: {}},
		OR:                                {OR: {}},
		REPT_APARAMS1:                     {COMMA: {}, EPSILON: {}},
		STRUCTDECL:                        {STRUCT: {}},
		FUNC:                              {FUNC: {}},
		FUNCBODY:                          {OPENCUBR: {}},
		INHERITS:                          {INHERITS: {}},
		ID:                                {ID: {}},
		OPENCUBR:                          {OPENCUBR: {}},
	}
}

var FOLLOWS = func() map[Kind]KindSet {
	return map[Kind]KindSet{
		OPT_STRUCTDECL2:                   {OPENCUBR: {}},
		SOMETHING:                         {CLOSEPAR: {}, ASSIGN: {}},
		MORE_INDICE:                       {ASSIGN: {}, PLUS: {}, DIV: {}, MINUS: {}, ID: {}, CLOSESQBR: {}, MULT: {}, OR: {}, DOT: {}, AND: {}, CLOSEPAR: {}},
		VARDECL:                           {WRITE: {}, LET: {}, ID: {}, CLOSECUBR: {}, READ: {}, IF: {}, WHILE: {}, PUBLIC: {}, RETURN: {}, PRIVATE: {}},
		REPT_FPARAMS3:                     {CLOSEPAR: {}, COMMA: {}},
		ARITHORRELEXPR_DISAMBIGUATE:       {},
		FACTOR:                            {PLUS: {}, AND: {}, OR: {}, CLOSEPAR: {}, DIV: {}, MULT: {}, CLOSESQBR: {}, MINUS: {}},
		MEMBERDECL:                        {CLOSECUBR: {}, PUBLIC: {}, PRIVATE: {}},
		STRUCTORIMPLORFUNC:                {STRUCT: {}, FUNC: {}, IMPL: {}},
		INDICE:                            {PLUS: {}, ID: {}, ASSIGN: {}, DIV: {}, CLOSESQBR: {}, CLOSEPAR: {}, SEMI: {}, MINUS: {}, OPENSQBR: {}, DOT: {}, MULT: {}, AND: {}, OR: {}},
		ARRAYSIZE_FACTORIZED:              {SEMI: {}, CLOSEPAR: {}, OPENSQBR: {}, COMMA: {}},
		FPARAMS:                           {CLOSEPAR: {}},
		ASSIGNSTATORFUNCCALL:              {SEMI: {}},
		STRUCTDECL:                        {STRUCT: {}, IMPL: {}, FUNC: {}},
		REPT_APARAMS1:                     {CLOSEPAR: {}},
		FPARAMSTAIL:                       {COMMA: {}, CLOSEPAR: {}},
		STATEMENT:                         {RETURN: {}, WHILE: {}, READ: {}, CLOSECUBR: {}, WRITE: {}, SEMI: {}, LET: {}, ID: {}, IF: {}},
		FUNCDEF:                           {IMPL: {}, CLOSECUBR: {}, FUNC: {}, STRUCT: {}},
		MULTOP:                            {MINUS: {}, PLUS: {}, ID: {}, INTNUM: {}, FLOATNUM: {}, OPENPAR: {}, NOT: {}},
		FUNCBODY:                          {IMPL: {}, CLOSECUBR: {}, STRUCT: {}, FUNC: {}},
		FUNCTIONCALL:                      {},
		VARIABLE:                          {ASSIGN: {}, CLOSEPAR: {}},
		RELOP:                             {ID: {}, OPENPAR: {}, FLOATNUM: {}, PLUS: {}, INTNUM: {}, MINUS: {}, NOT: {}},
		PROG:                              {},
		START:                             {},
		REPT_PROG0:                        {},
		REPT_FPARAMSTAIL4:                 {CLOSEPAR: {}, COMMA: {}},
		REPT_STRUCTDECL4:                  {CLOSECUBR: {}},
		REPT_OPT_STRUCTDECL22:             {OPENCUBR: {}},
		RELEXPR:                           {CLOSEPAR: {}},
		MORE_FUNC:                         {SEMI: {}},
		ASSIGNOP:                          {PLUS: {}, ID: {}, NOT: {}, MINUS: {}, FLOATNUM: {}, OPENPAR: {}, INTNUM: {}},
		MORE_ASSIGN:                       {SEMI: {}},
		IMPLDEF:                           {IMPL: {}, FUNC: {}, STRUCT: {}},
		EXPR:                              {COMMA: {}, CLOSEPAR: {}, SEMI: {}},
		SOMETHING_FUNC:                    {},
		TERM:                              {CLOSESQBR: {}, CLOSEPAR: {}, MINUS: {}, PLUS: {}, OR: {}},
		TYPE:                              {LET: {}, CLOSECUBR: {}, WRITE: {}, OPENCUBR: {}, ID: {}, WHILE: {}, RETURN: {}, PUBLIC: {}, PRIVATE: {}, READ: {}, COMMA: {}, CLOSEPAR: {}, IF: {}, OPENSQBR: {}, SEMI: {}},
		REPT_FPARAMS4:                     {CLOSEPAR: {}},
		APARAMS:                           {CLOSEPAR: {}},
		STATBLOCK:                         {SEMI: {}},
		APARAMSTAIL:                       {COMMA: {}, CLOSEPAR: {}},
		FUNCDECL:                          {PRIVATE: {}, CLOSECUBR: {}, PUBLIC: {}},
		ADDOP:                             {ID: {}, INTNUM: {}, FLOATNUM: {}, NOT: {}, OPENPAR: {}, PLUS: {}, MINUS: {}},
		ARRAYSIZE:                         {OPENSQBR: {}, CLOSEPAR: {}, SEMI: {}, COMMA: {}},
		ARITHEXPR:                         {CLOSEPAR: {}, CLOSESQBR: {}},
		VARORFUNCCALL_DISAMBIGUATE:        {OR: {}, MINUS: {}, PLUS: {}, CLOSESQBR: {}, CLOSEPAR: {}, AND: {}, ID: {}, MULT: {}, DIV: {}},
		VISIBILITY:                        {FUNC: {}, LET: {}},
		VARORFUNCCALL:                     {DIV: {}, AND: {}, CLOSEPAR: {}, PLUS: {}, ID: {}, MULT: {}, MINUS: {}, CLOSESQBR: {}, OR: {}},
		REPT_VARDECL4:                     {SEMI: {}},
		ASSIGNSTATORFUNCCALL_DISAMBIGUATE: {SEMI: {}},
		ANOTHER:                           {MULT: {}, OR: {}, DIV: {}, CLOSESQBR: {}, AND: {}, ID: {}, MINUS: {}, CLOSEPAR: {}, PLUS: {}},
		RIGHTREC_ARITHEXPR:                {CLOSEPAR: {}, CLOSESQBR: {}},
		RETURNTYPE:                        {SEMI: {}, OPENCUBR: {}},
		RIGHTREC_TERM:                     {MINUS: {}, CLOSESQBR: {}, OR: {}, CLOSEPAR: {}, PLUS: {}},
		REPT_STATBLOCK1:                   {CLOSECUBR: {}},
		REPT_IMPLDEF3:                     {CLOSECUBR: {}},
		ASSIGNSTAT:                        {},
		SIGN:                              {ID: {}, NOT: {}, PLUS: {}, MINUS: {}, INTNUM: {}, FLOATNUM: {}, OPENPAR: {}},
		REPT_FUNCBODY1:                    {CLOSECUBR: {}},
		FUNCHEAD:                          {SEMI: {}, OPENCUBR: {}},
		VARDECLORSTAT:                     {WRITE: {}, CLOSECUBR: {}, LET: {}, WHILE: {}, READ: {}, ID: {}, RETURN: {}, IF: {}},
	}
}

type Key struct {
	Nonterminal Kind
	Terminal    Kind
}

var TABLE = func() map[Key]Rule {
	return map[Key]Rule{
		{REPT_FUNCBODY1, READ}:                        {REPT_FUNCBODY1, []Kind{VARDECLORSTAT, REPT_FUNCBODY1}},
		{REPT_FUNCBODY1, WRITE}:                       {REPT_FUNCBODY1, []Kind{VARDECLORSTAT, REPT_FUNCBODY1}},
		{REPT_FUNCBODY1, RETURN}:                      {REPT_FUNCBODY1, []Kind{VARDECLORSTAT, REPT_FUNCBODY1}},
		{REPT_FUNCBODY1, LET}:                         {REPT_FUNCBODY1, []Kind{VARDECLORSTAT, REPT_FUNCBODY1}},
		{REPT_FUNCBODY1, ID}:                          {REPT_FUNCBODY1, []Kind{VARDECLORSTAT, REPT_FUNCBODY1}},
		{REPT_FUNCBODY1, IF}:                          {REPT_FUNCBODY1, []Kind{VARDECLORSTAT, REPT_FUNCBODY1}},
		{REPT_FUNCBODY1, WHILE}:                       {REPT_FUNCBODY1, []Kind{VARDECLORSTAT, REPT_FUNCBODY1}},
		{REPT_FUNCBODY1, CLOSECUBR}:                   {REPT_FUNCBODY1, []Kind{EPSILON}},
		{RELOP, EQ}:                                   {RELOP, []Kind{EQ}},
		{RELOP, NOTEQ}:                                {RELOP, []Kind{NOTEQ}},
		{RELOP, LT}:                                   {RELOP, []Kind{LT}},
		{RELOP, GT}:                                   {RELOP, []Kind{GT}},
		{RELOP, LEQ}:                                  {RELOP, []Kind{LEQ}},
		{RELOP, GEQ}:                                  {RELOP, []Kind{GEQ}},
		{MULTOP, MULT}:                                {MULTOP, []Kind{MULT}},
		{MULTOP, DIV}:                                 {MULTOP, []Kind{DIV}},
		{MULTOP, AND}:                                 {MULTOP, []Kind{AND}},
		{STRUCTDECL, STRUCT}:                          {STRUCTDECL, []Kind{STRUCT, ID, OPT_STRUCTDECL2, OPENCUBR, REPT_STRUCTDECL4, CLOSECUBR, SEMI}},
		{REPT_IMPLDEF3, FUNC}:                         {REPT_IMPLDEF3, []Kind{FUNCDEF, REPT_IMPLDEF3}},
		{REPT_IMPLDEF3, CLOSECUBR}:                    {REPT_IMPLDEF3, []Kind{EPSILON}},
		{OPT_STRUCTDECL2, INHERITS}:                   {OPT_STRUCTDECL2, []Kind{INHERITS, ID, REPT_OPT_STRUCTDECL22}},
		{OPT_STRUCTDECL2, OPENCUBR}:                   {OPT_STRUCTDECL2, []Kind{EPSILON}},
		{FUNCTIONCALL, ID}:                            {FUNCTIONCALL, []Kind{ID, OPENPAR, APARAMS, CLOSEPAR, SOMETHING_FUNC}},
		{PROG, STRUCT}:                                {PROG, []Kind{REPT_PROG0}},
		{PROG, IMPL}:                                  {PROG, []Kind{REPT_PROG0}},
		{PROG, FUNC}:                                  {PROG, []Kind{REPT_PROG0}},
		{REPT_VARDECL4, OPENSQBR}:                     {REPT_VARDECL4, []Kind{ARRAYSIZE, REPT_VARDECL4}},
		{REPT_VARDECL4, SEMI}:                         {REPT_VARDECL4, []Kind{EPSILON}},
		{RIGHTREC_ARITHEXPR, PLUS}:                    {RIGHTREC_ARITHEXPR, []Kind{ADDOP, TERM, RIGHTREC_ARITHEXPR}},
		{RIGHTREC_ARITHEXPR, MINUS}:                   {RIGHTREC_ARITHEXPR, []Kind{ADDOP, TERM, RIGHTREC_ARITHEXPR}},
		{RIGHTREC_ARITHEXPR, OR}:                      {RIGHTREC_ARITHEXPR, []Kind{ADDOP, TERM, RIGHTREC_ARITHEXPR}},
		{RIGHTREC_ARITHEXPR, CLOSEPAR}:                {RIGHTREC_ARITHEXPR, []Kind{EPSILON}},
		{RIGHTREC_ARITHEXPR, CLOSESQBR}:               {RIGHTREC_ARITHEXPR, []Kind{EPSILON}},
		{ASSIGNOP, ASSIGN}:                            {ASSIGNOP, []Kind{ASSIGN}},
		{FUNCBODY, OPENCUBR}:                          {FUNCBODY, []Kind{OPENCUBR, REPT_FUNCBODY1, CLOSECUBR}},
		{ASSIGNSTATORFUNCCALL, ID}:                    {ASSIGNSTATORFUNCCALL, []Kind{ID, ASSIGNSTATORFUNCCALL_DISAMBIGUATE}},
		{VARORFUNCCALL_DISAMBIGUATE, OPENPAR}:         {VARORFUNCCALL_DISAMBIGUATE, []Kind{OPENPAR, APARAMS, CLOSEPAR, ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, OPENSQBR}:        {VARORFUNCCALL_DISAMBIGUATE, []Kind{INDICE, MORE_INDICE, ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, DOT}:             {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, MINUS}:           {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, OR}:              {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, PLUS}:            {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, CLOSEPAR}:        {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, CLOSESQBR}:       {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, MULT}:            {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, DIV}:             {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, AND}:             {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{VARORFUNCCALL_DISAMBIGUATE, ID}:              {VARORFUNCCALL_DISAMBIGUATE, []Kind{ANOTHER}},
		{EXPR, INTNUM}:                                {EXPR, []Kind{ARITHEXPR, ARITHORRELEXPR_DISAMBIGUATE}},
		{EXPR, FLOATNUM}:                              {EXPR, []Kind{ARITHEXPR, ARITHORRELEXPR_DISAMBIGUATE}},
		{EXPR, OPENPAR}:                               {EXPR, []Kind{ARITHEXPR, ARITHORRELEXPR_DISAMBIGUATE}},
		{EXPR, NOT}:                                   {EXPR, []Kind{ARITHEXPR, ARITHORRELEXPR_DISAMBIGUATE}},
		{EXPR, PLUS}:                                  {EXPR, []Kind{ARITHEXPR, ARITHORRELEXPR_DISAMBIGUATE}},
		{EXPR, MINUS}:                                 {EXPR, []Kind{ARITHEXPR, ARITHORRELEXPR_DISAMBIGUATE}},
		{EXPR, ID}:                                    {EXPR, []Kind{ARITHEXPR, ARITHORRELEXPR_DISAMBIGUATE}},
		{FACTOR, ID}:                                  {FACTOR, []Kind{VARORFUNCCALL}},
		{FACTOR, INTNUM}:                              {FACTOR, []Kind{INTNUM}},
		{FACTOR, FLOATNUM}:                            {FACTOR, []Kind{FLOATNUM}},
		{FACTOR, OPENPAR}:                             {FACTOR, []Kind{OPENPAR, ARITHEXPR, CLOSEPAR}},
		{FACTOR, NOT}:                                 {FACTOR, []Kind{NOT, FACTOR}},
		{FACTOR, PLUS}:                                {FACTOR, []Kind{SIGN, FACTOR}},
		{FACTOR, MINUS}:                               {FACTOR, []Kind{SIGN, FACTOR}},
		{ARITHEXPR, PLUS}:                             {ARITHEXPR, []Kind{TERM, RIGHTREC_ARITHEXPR}},
		{ARITHEXPR, MINUS}:                            {ARITHEXPR, []Kind{TERM, RIGHTREC_ARITHEXPR}},
		{ARITHEXPR, ID}:                               {ARITHEXPR, []Kind{TERM, RIGHTREC_ARITHEXPR}},
		{ARITHEXPR, INTNUM}:                           {ARITHEXPR, []Kind{TERM, RIGHTREC_ARITHEXPR}},
		{ARITHEXPR, FLOATNUM}:                         {ARITHEXPR, []Kind{TERM, RIGHTREC_ARITHEXPR}},
		{ARITHEXPR, OPENPAR}:                          {ARITHEXPR, []Kind{TERM, RIGHTREC_ARITHEXPR}},
		{ARITHEXPR, NOT}:                              {ARITHEXPR, []Kind{TERM, RIGHTREC_ARITHEXPR}},
		{TERM, PLUS}:                                  {TERM, []Kind{FACTOR, RIGHTREC_TERM}},
		{TERM, MINUS}:                                 {TERM, []Kind{FACTOR, RIGHTREC_TERM}},
		{TERM, ID}:                                    {TERM, []Kind{FACTOR, RIGHTREC_TERM}},
		{TERM, INTNUM}:                                {TERM, []Kind{FACTOR, RIGHTREC_TERM}},
		{TERM, FLOATNUM}:                              {TERM, []Kind{FACTOR, RIGHTREC_TERM}},
		{TERM, OPENPAR}:                               {TERM, []Kind{FACTOR, RIGHTREC_TERM}},
		{TERM, NOT}:                                   {TERM, []Kind{FACTOR, RIGHTREC_TERM}},
		{FPARAMSTAIL, COMMA}:                          {FPARAMSTAIL, []Kind{COMMA, ID, COLON, TYPE, REPT_FPARAMSTAIL4}},
		{START, STRUCT}:                               {START, []Kind{PROG}},
		{START, IMPL}:                                 {START, []Kind{PROG}},
		{START, FUNC}:                                 {START, []Kind{PROG}},
		{IMPLDEF, IMPL}:                               {IMPLDEF, []Kind{IMPL, ID, OPENCUBR, REPT_IMPLDEF3, CLOSECUBR}},
		{FUNCDEF, FUNC}:                               {FUNCDEF, []Kind{FUNCHEAD, FUNCBODY}},
		{MORE_INDICE, OPENSQBR}:                       {MORE_INDICE, []Kind{INDICE, MORE_INDICE}},
		{MORE_INDICE, CLOSESQBR}:                      {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, MULT}:                           {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, OR}:                             {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, DOT}:                            {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, AND}:                            {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, CLOSEPAR}:                       {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, MINUS}:                          {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, ASSIGN}:                         {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, PLUS}:                           {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, DIV}:                            {MORE_INDICE, []Kind{EPSILON}},
		{MORE_INDICE, ID}:                             {MORE_INDICE, []Kind{EPSILON}},
		{VARIABLE, ID}:                                {VARIABLE, []Kind{ID, MORE_INDICE, SOMETHING}},
		{ARITHORRELEXPR_DISAMBIGUATE, LT}:             {ARITHORRELEXPR_DISAMBIGUATE, []Kind{RELOP, ARITHEXPR}},
		{ARITHORRELEXPR_DISAMBIGUATE, GT}:             {ARITHORRELEXPR_DISAMBIGUATE, []Kind{RELOP, ARITHEXPR}},
		{ARITHORRELEXPR_DISAMBIGUATE, LEQ}:            {ARITHORRELEXPR_DISAMBIGUATE, []Kind{RELOP, ARITHEXPR}},
		{ARITHORRELEXPR_DISAMBIGUATE, GEQ}:            {ARITHORRELEXPR_DISAMBIGUATE, []Kind{RELOP, ARITHEXPR}},
		{ARITHORRELEXPR_DISAMBIGUATE, EQ}:             {ARITHORRELEXPR_DISAMBIGUATE, []Kind{RELOP, ARITHEXPR}},
		{ARITHORRELEXPR_DISAMBIGUATE, NOTEQ}:          {ARITHORRELEXPR_DISAMBIGUATE, []Kind{RELOP, ARITHEXPR}},
		{FPARAMS, ID}:                                 {FPARAMS, []Kind{ID, COLON, TYPE, REPT_FPARAMS3, REPT_FPARAMS4}},
		{FPARAMS, CLOSEPAR}:                           {FPARAMS, []Kind{EPSILON}},
		{REPT_FPARAMS3, OPENSQBR}:                     {REPT_FPARAMS3, []Kind{ARRAYSIZE, REPT_FPARAMS3}},
		{REPT_FPARAMS3, CLOSEPAR}:                     {REPT_FPARAMS3, []Kind{EPSILON}},
		{REPT_FPARAMS3, COMMA}:                        {REPT_FPARAMS3, []Kind{EPSILON}},
		{REPT_APARAMS1, COMMA}:                        {REPT_APARAMS1, []Kind{APARAMSTAIL, REPT_APARAMS1}},
		{REPT_APARAMS1, CLOSEPAR}:                     {REPT_APARAMS1, []Kind{EPSILON}},
		{ADDOP, PLUS}:                                 {ADDOP, []Kind{PLUS}},
		{ADDOP, MINUS}:                                {ADDOP, []Kind{MINUS}},
		{ADDOP, OR}:                                   {ADDOP, []Kind{OR}},
		{ASSIGNSTATORFUNCCALL_DISAMBIGUATE, OPENSQBR}: {ASSIGNSTATORFUNCCALL_DISAMBIGUATE, []Kind{INDICE, MORE_INDICE, MORE_ASSIGN}},
		{ASSIGNSTATORFUNCCALL_DISAMBIGUATE, OPENPAR}:  {ASSIGNSTATORFUNCCALL_DISAMBIGUATE, []Kind{OPENPAR, APARAMS, CLOSEPAR, MORE_FUNC}},
		{ASSIGNSTATORFUNCCALL_DISAMBIGUATE, DOT}:      {ASSIGNSTATORFUNCCALL_DISAMBIGUATE, []Kind{MORE_ASSIGN}},
		{ASSIGNSTATORFUNCCALL_DISAMBIGUATE, ASSIGN}:   {ASSIGNSTATORFUNCCALL_DISAMBIGUATE, []Kind{MORE_ASSIGN}},
		{SOMETHING, DOT}:                              {SOMETHING, []Kind{DOT, VARORFUNCCALL, ID, MORE_INDICE}},
		{SOMETHING, CLOSEPAR}:                         {SOMETHING, []Kind{EPSILON}},
		{SOMETHING, ASSIGN}:                           {SOMETHING, []Kind{EPSILON}},
		{ARRAYSIZE, OPENSQBR}:                         {ARRAYSIZE, []Kind{OPENSQBR, ARRAYSIZE_FACTORIZED}},
		{REPT_PROG0, STRUCT}:                          {REPT_PROG0, []Kind{STRUCTORIMPLORFUNC, REPT_PROG0}},
		{REPT_PROG0, IMPL}:                            {REPT_PROG0, []Kind{STRUCTORIMPLORFUNC, REPT_PROG0}},
		{REPT_PROG0, FUNC}:                            {REPT_PROG0, []Kind{STRUCTORIMPLORFUNC, REPT_PROG0}},
		{FUNCDECL, FUNC}:                              {FUNCDECL, []Kind{FUNCHEAD, SEMI}},
		{REPT_STATBLOCK1, ID}:                         {REPT_STATBLOCK1, []Kind{STATEMENT, REPT_STATBLOCK1}},
		{REPT_STATBLOCK1, IF}:                         {REPT_STATBLOCK1, []Kind{STATEMENT, REPT_STATBLOCK1}},
		{REPT_STATBLOCK1, WHILE}:                      {REPT_STATBLOCK1, []Kind{STATEMENT, REPT_STATBLOCK1}},
		{REPT_STATBLOCK1, READ}:                       {REPT_STATBLOCK1, []Kind{STATEMENT, REPT_STATBLOCK1}},
		{REPT_STATBLOCK1, WRITE}:                      {REPT_STATBLOCK1, []Kind{STATEMENT, REPT_STATBLOCK1}},
		{REPT_STATBLOCK1, RETURN}:                     {REPT_STATBLOCK1, []Kind{STATEMENT, REPT_STATBLOCK1}},
		{REPT_STATBLOCK1, CLOSECUBR}:                  {REPT_STATBLOCK1, []Kind{EPSILON}},
		{RIGHTREC_TERM, MULT}:                         {RIGHTREC_TERM, []Kind{MULTOP, FACTOR, RIGHTREC_TERM}},
		{RIGHTREC_TERM, DIV}:                          {RIGHTREC_TERM, []Kind{MULTOP, FACTOR, RIGHTREC_TERM}},
		{RIGHTREC_TERM, AND}:                          {RIGHTREC_TERM, []Kind{MULTOP, FACTOR, RIGHTREC_TERM}},
		{RIGHTREC_TERM, CLOSEPAR}:                     {RIGHTREC_TERM, []Kind{EPSILON}},
		{RIGHTREC_TERM, PLUS}:                         {RIGHTREC_TERM, []Kind{EPSILON}},
		{RIGHTREC_TERM, MINUS}:                        {RIGHTREC_TERM, []Kind{EPSILON}},
		{RIGHTREC_TERM, CLOSESQBR}:                    {RIGHTREC_TERM, []Kind{EPSILON}},
		{RIGHTREC_TERM, OR}:                           {RIGHTREC_TERM, []Kind{EPSILON}},
		{STATEMENT, ID}:                               {STATEMENT, []Kind{ASSIGNSTATORFUNCCALL, SEMI}},
		{STATEMENT, IF}:                               {STATEMENT, []Kind{IF, OPENPAR, RELEXPR, CLOSEPAR, THEN, STATBLOCK, ELSE, STATBLOCK, SEMI}},
		{STATEMENT, WHILE}:                            {STATEMENT, []Kind{WHILE, OPENPAR, RELEXPR, CLOSEPAR, STATBLOCK, SEMI}},
		{STATEMENT, READ}:                             {STATEMENT, []Kind{READ, OPENPAR, VARIABLE, CLOSEPAR, SEMI}},
		{STATEMENT, WRITE}:                            {STATEMENT, []Kind{WRITE, OPENPAR, EXPR, CLOSEPAR, SEMI}},
		{STATEMENT, RETURN}:                           {STATEMENT, []Kind{RETURN, OPENPAR, EXPR, CLOSEPAR, SEMI}},
		{VARORFUNCCALL, ID}:                           {VARORFUNCCALL, []Kind{ID, VARORFUNCCALL_DISAMBIGUATE}},
		{APARAMS, INTNUM}:                             {APARAMS, []Kind{EXPR, REPT_APARAMS1}},
		{APARAMS, FLOATNUM}:                           {APARAMS, []Kind{EXPR, REPT_APARAMS1}},
		{APARAMS, OPENPAR}:                            {APARAMS, []Kind{EXPR, REPT_APARAMS1}},
		{APARAMS, NOT}:                                {APARAMS, []Kind{EXPR, REPT_APARAMS1}},
		{APARAMS, PLUS}:                               {APARAMS, []Kind{EXPR, REPT_APARAMS1}},
		{APARAMS, MINUS}:                              {APARAMS, []Kind{EXPR, REPT_APARAMS1}},
		{APARAMS, ID}:                                 {APARAMS, []Kind{EXPR, REPT_APARAMS1}},
		{APARAMS, CLOSEPAR}:                           {APARAMS, []Kind{EPSILON}},
		{REPT_STRUCTDECL4, PUBLIC}:                    {REPT_STRUCTDECL4, []Kind{VISIBILITY, MEMBERDECL, REPT_STRUCTDECL4}},
		{REPT_STRUCTDECL4, PRIVATE}:                   {REPT_STRUCTDECL4, []Kind{VISIBILITY, MEMBERDECL, REPT_STRUCTDECL4}},
		{REPT_STRUCTDECL4, CLOSECUBR}:                 {REPT_STRUCTDECL4, []Kind{EPSILON}},
		{RELEXPR, FLOATNUM}:                           {RELEXPR, []Kind{ARITHEXPR, RELOP, ARITHEXPR}},
		{RELEXPR, OPENPAR}:                            {RELEXPR, []Kind{ARITHEXPR, RELOP, ARITHEXPR}},
		{RELEXPR, NOT}:                                {RELEXPR, []Kind{ARITHEXPR, RELOP, ARITHEXPR}},
		{RELEXPR, PLUS}:                               {RELEXPR, []Kind{ARITHEXPR, RELOP, ARITHEXPR}},
		{RELEXPR, MINUS}:                              {RELEXPR, []Kind{ARITHEXPR, RELOP, ARITHEXPR}},
		{RELEXPR, ID}:                                 {RELEXPR, []Kind{ARITHEXPR, RELOP, ARITHEXPR}},
		{RELEXPR, INTNUM}:                             {RELEXPR, []Kind{ARITHEXPR, RELOP, ARITHEXPR}},
		{SIGN, PLUS}:                                  {SIGN, []Kind{PLUS}},
		{SIGN, MINUS}:                                 {SIGN, []Kind{MINUS}},
		{RETURNTYPE, INTEGER}:                         {RETURNTYPE, []Kind{TYPE}},
		{RETURNTYPE, FLOAT}:                           {RETURNTYPE, []Kind{TYPE}},
		{RETURNTYPE, ID}:                              {RETURNTYPE, []Kind{TYPE}},
		{RETURNTYPE, VOID}:                            {RETURNTYPE, []Kind{VOID}},
		{ANOTHER, DOT}:                                {ANOTHER, []Kind{DOT, VARORFUNCCALL}},
		{ANOTHER, CLOSESQBR}:                          {ANOTHER, []Kind{EPSILON}},
		{ANOTHER, AND}:                                {ANOTHER, []Kind{EPSILON}},
		{ANOTHER, ID}:                                 {ANOTHER, []Kind{EPSILON}},
		{ANOTHER, MINUS}:                              {ANOTHER, []Kind{EPSILON}},
		{ANOTHER, CLOSEPAR}:                           {ANOTHER, []Kind{EPSILON}},
		{ANOTHER, PLUS}:                               {ANOTHER, []Kind{EPSILON}},
		{ANOTHER, MULT}:                               {ANOTHER, []Kind{EPSILON}},
		{ANOTHER, OR}:                                 {ANOTHER, []Kind{EPSILON}},
		{ANOTHER, DIV}:                                {ANOTHER, []Kind{EPSILON}},
		{SOMETHING_FUNC, DOT}:                         {SOMETHING_FUNC, []Kind{DOT, VARORFUNCCALL, ID, OPENPAR, APARAMS, CLOSEPAR}},
		{APARAMSTAIL, COMMA}:                          {APARAMSTAIL, []Kind{COMMA, EXPR}},
		{TYPE, INTEGER}:                               {TYPE, []Kind{INTEGER}},
		{TYPE, FLOAT}:                                 {TYPE, []Kind{FLOAT}},
		{TYPE, ID}:                                    {TYPE, []Kind{ID}},
		{MEMBERDECL, FUNC}:                            {MEMBERDECL, []Kind{FUNCDECL}},
		{MEMBERDECL, LET}:                             {MEMBERDECL, []Kind{VARDECL}},
		{VARDECL, LET}:                                {VARDECL, []Kind{LET, ID, COLON, TYPE, REPT_VARDECL4, SEMI}},
		{INDICE, OPENSQBR}:                            {INDICE, []Kind{OPENSQBR, ARITHEXPR, CLOSESQBR}},
		{ARRAYSIZE_FACTORIZED, CLOSESQBR}:             {ARRAYSIZE_FACTORIZED, []Kind{CLOSESQBR}},
		{ARRAYSIZE_FACTORIZED, INTNUM}:                {ARRAYSIZE_FACTORIZED, []Kind{INTNUM, CLOSESQBR}},
		{STRUCTORIMPLORFUNC, STRUCT}:                  {STRUCTORIMPLORFUNC, []Kind{STRUCTDECL}},
		{STRUCTORIMPLORFUNC, IMPL}:                    {STRUCTORIMPLORFUNC, []Kind{IMPLDEF}},
		{STRUCTORIMPLORFUNC, FUNC}:                    {STRUCTORIMPLORFUNC, []Kind{FUNCDEF}},
		{REPT_OPT_STRUCTDECL22, COMMA}:                {REPT_OPT_STRUCTDECL22, []Kind{COMMA, ID, REPT_OPT_STRUCTDECL22}},
		{REPT_OPT_STRUCTDECL22, OPENCUBR}:             {REPT_OPT_STRUCTDECL22, []Kind{EPSILON}},
		{FUNCHEAD, FUNC}:                              {FUNCHEAD, []Kind{FUNC, ID, OPENPAR, FPARAMS, CLOSEPAR, ARROW, RETURNTYPE}},
		{REPT_FPARAMS4, COMMA}:                        {REPT_FPARAMS4, []Kind{FPARAMSTAIL, REPT_FPARAMS4}},
		{REPT_FPARAMS4, CLOSEPAR}:                     {REPT_FPARAMS4, []Kind{EPSILON}},
		{REPT_FPARAMSTAIL4, OPENSQBR}:                 {REPT_FPARAMSTAIL4, []Kind{ARRAYSIZE, REPT_FPARAMSTAIL4}},
		{REPT_FPARAMSTAIL4, COMMA}:                    {REPT_FPARAMSTAIL4, []Kind{EPSILON}},
		{REPT_FPARAMSTAIL4, CLOSEPAR}:                 {REPT_FPARAMSTAIL4, []Kind{EPSILON}},
		{VISIBILITY, PUBLIC}:                          {VISIBILITY, []Kind{PUBLIC}},
		{VISIBILITY, PRIVATE}:                         {VISIBILITY, []Kind{PRIVATE}},
		{VARDECLORSTAT, LET}:                          {VARDECLORSTAT, []Kind{VARDECL}},
		{VARDECLORSTAT, WRITE}:                        {VARDECLORSTAT, []Kind{STATEMENT}},
		{VARDECLORSTAT, RETURN}:                       {VARDECLORSTAT, []Kind{STATEMENT}},
		{VARDECLORSTAT, ID}:                           {VARDECLORSTAT, []Kind{STATEMENT}},
		{VARDECLORSTAT, IF}:                           {VARDECLORSTAT, []Kind{STATEMENT}},
		{VARDECLORSTAT, WHILE}:                        {VARDECLORSTAT, []Kind{STATEMENT}},
		{VARDECLORSTAT, READ}:                         {VARDECLORSTAT, []Kind{STATEMENT}},
		{MORE_ASSIGN, DOT}:                            {MORE_ASSIGN, []Kind{DOT, ASSIGNSTATORFUNCCALL}},
		{MORE_ASSIGN, ASSIGN}:                         {MORE_ASSIGN, []Kind{ASSIGNOP, EXPR, SEMI}},
		{MORE_FUNC, DOT}:                              {MORE_FUNC, []Kind{DOT, ASSIGNSTATORFUNCCALL}},
		{MORE_FUNC, SEMI}:                             {MORE_FUNC, []Kind{SEMI}},
		{ASSIGNSTAT, ID}:                              {ASSIGNSTAT, []Kind{VARIABLE, ASSIGNOP, EXPR}},
		{STATBLOCK, OPENCUBR}:                         {STATBLOCK, []Kind{OPENCUBR, REPT_STATBLOCK1, CLOSECUBR}},
		{STATBLOCK, WRITE}:                            {STATBLOCK, []Kind{STATEMENT}},
		{STATBLOCK, RETURN}:                           {STATBLOCK, []Kind{STATEMENT}},
		{STATBLOCK, ID}:                               {STATBLOCK, []Kind{STATEMENT}},
		{STATBLOCK, IF}:                               {STATBLOCK, []Kind{STATEMENT}},
		{STATBLOCK, WHILE}:                            {STATBLOCK, []Kind{STATEMENT}},
		{STATBLOCK, READ}:                             {STATBLOCK, []Kind{STATEMENT}},
		{STATBLOCK, SEMI}:                             {STATBLOCK, []Kind{EPSILON}},
	}
}
