package compositetable

import (
	"github.com/obonobo/compiler/core/scanner"
	t "github.com/obonobo/compiler/core/tabledrivenscanner"
)

// This is the actual implementation table used by the app
var TABLE *CompositeTable = &CompositeTable{
	Start: t.START,

	Transitions: map[Key]t.State{
		// SPACES
		{1, ' '}: 1,

		// COMMENTS
		{1, '/'}: 2,

		{2, '/'}:   5,
		{2, '*'}:   4,
		{2, t.ANY}: 3,

		{4, t.ANY}: 4,
		{4, '*'}:   7,

		{7, t.ANY}: 4,
		{7, '/'}:   8,

		{5, t.ANY}: 5,
		{5, '\n'}:  6,

		// OPERATORS AND PUNCTUATION
		{1, '='}:   9,
		{9, t.ANY}: 10,
		{9, '='}:   11,

		{1, '-'}:    13,
		{13, t.ANY}: 14,
		{13, '>'}:   15,

		{1, '<'}:    20,
		{20, t.ANY}: 21,
		{20, '>'}:   22,
		{20, '='}:   23,

		{1, '>'}:    24,
		{24, t.ANY}: 25,
		{24, '='}:   26,

		{1, ':'}:    36,
		{36, t.ANY}: 37,
		{36, ':'}:   38,

		{1, '+'}: 12,
		{1, '|'}: 16,
		{1, '&'}: 17,
		{1, '!'}: 18,
		{1, '*'}: 19,
		{1, '('}: 27,
		{1, ')'}: 28,
		{1, '{'}: 29,
		{1, '}'}: 30,
		{1, '['}: 31,
		{1, ']'}: 32,
		{1, ';'}: 33,
		{1, ','}: 34,
		{1, '.'}: 35,

		// ID AND RESERVED WORDS
		{1, t.LETTER}:  39,
		{39, t.LETTER}: 39,
		{39, '0'}:      39,
		{39, '1'}:      39,
		{39, '2'}:      39,
		{39, '3'}:      39,
		{39, '4'}:      39,
		{39, '5'}:      39,
		{39, '6'}:      39,
		{39, '7'}:      39,
		{39, '8'}:      39,
		{39, '9'}:      39,
		{39, '_'}:      39,
		{39, t.ANY}:    40,

		// INTS AND FLOATS
		{1, '1'}: 41,
		{1, '2'}: 41,
		{1, '3'}: 41,
		{1, '4'}: 41,
		{1, '5'}: 41,
		{1, '6'}: 41,
		{1, '7'}: 41,
		{1, '8'}: 41,
		{1, '9'}: 41,

		{41, '0'}: 41,
		{41, '1'}: 41,
		{41, '2'}: 41,
		{41, '3'}: 41,
		{41, '4'}: 41,
		{41, '5'}: 41,
		{41, '6'}: 41,
		{41, '7'}: 41,
		{41, '8'}: 41,
		{41, '9'}: 41,

		{1, '0'}:    42,
		{41, t.ANY}: 43,
		{42, t.ANY}: 43,
		{41, '.'}:   44,
		{42, '.'}:   44,

		{41, t.LETTER}: 58,
		{41, '_'}:      58,
		{42, t.LETTER}: 58,
		{42, '_'}:      58,

		{1, '_'}:       58,
		{58, '_'}:      58,
		{58, t.LETTER}: 58,
		{58, '0'}:      58,
		{58, '1'}:      58,
		{58, '2'}:      58,
		{58, '3'}:      58,
		{58, '4'}:      58,
		{58, '5'}:      58,
		{58, '6'}:      58,
		{58, '7'}:      58,
		{58, '8'}:      58,
		{58, '9'}:      58,
		{58, t.ANY}:    59,

		{42, '0'}: 56,
		{42, '1'}: 56,
		{42, '2'}: 56,
		{42, '3'}: 56,
		{42, '4'}: 56,
		{42, '5'}: 56,
		{42, '6'}: 56,
		{42, '7'}: 56,
		{42, '8'}: 56,
		{42, '9'}: 56,

		{56, t.ANY}: 57,
		{56, '0'}:   56,
		{56, '1'}:   56,
		{56, '2'}:   56,
		{56, '3'}:   56,
		{56, '4'}:   56,
		{56, '5'}:   56,
		{56, '6'}:   56,
		{56, '7'}:   56,
		{56, '8'}:   56,
		{56, '9'}:   56,
		{56, '.'}:   56,
		{56, 'e'}:   56,

		{44, '0'}: 45,
		{44, '1'}: 45,
		{44, '2'}: 45,
		{44, '3'}: 45,
		{44, '4'}: 45,
		{44, '5'}: 45,
		{44, '6'}: 45,
		{44, '7'}: 45,
		{44, '8'}: 45,
		{44, '9'}: 45,

		{45, '1'}: 45,
		{45, '2'}: 45,
		{45, '3'}: 45,
		{45, '4'}: 45,
		{45, '5'}: 45,
		{45, '6'}: 45,
		{45, '7'}: 45,
		{45, '8'}: 45,
		{45, '9'}: 45,

		{45, t.ANY}: 46,
		{45, '0'}:   47,

		{47, '1'}: 45,
		{47, '2'}: 45,
		{47, '3'}: 45,
		{47, '4'}: 45,
		{47, '5'}: 45,
		{47, '6'}: 45,
		{47, '7'}: 45,
		{47, '8'}: 45,
		{47, '9'}: 45,

		{47, t.ANY}: 48,

		{45, 'e'}: 49,
		{49, '0'}: 51,
		{49, '-'}: 50,
		{49, '+'}: 50,

		{49, '1'}: 54,
		{49, '2'}: 54,
		{49, '3'}: 54,
		{49, '4'}: 54,
		{49, '5'}: 54,
		{49, '6'}: 54,
		{49, '7'}: 54,
		{49, '8'}: 54,
		{49, '9'}: 54,

		{50, '0'}: 51,

		{50, '1'}: 54,
		{50, '2'}: 54,
		{50, '3'}: 54,
		{50, '4'}: 54,
		{50, '5'}: 54,
		{50, '6'}: 54,
		{50, '7'}: 54,
		{50, '8'}: 54,
		{50, '9'}: 54,

		{51, '0'}: 52,
		{51, '1'}: 52,
		{51, '2'}: 52,
		{51, '3'}: 52,
		{51, '4'}: 52,
		{51, '5'}: 52,
		{51, '6'}: 52,
		{51, '7'}: 52,
		{51, '8'}: 52,
		{51, '9'}: 52,

		{51, t.ANY}: 53,

		{52, '0'}: 52,
		{52, '1'}: 52,
		{52, '2'}: 52,
		{52, '3'}: 52,
		{52, '4'}: 52,
		{52, '5'}: 52,
		{52, '6'}: 52,
		{52, '7'}: 52,
		{52, '8'}: 52,
		{52, '9'}: 52,

		{52, t.ANY}: 55,

		{54, '0'}: 54,
		{54, '1'}: 54,
		{54, '2'}: 54,
		{54, '3'}: 54,
		{54, '4'}: 54,
		{54, '5'}: 54,
		{54, '6'}: 54,
		{54, '7'}: 54,
		{54, '8'}: 54,
		{54, '9'}: 54,

		{54, t.ANY}: 53,
	},

	// STATES THAT NEED BACKUP
	NeedBackup: map[t.State]struct{}{
		3:  {},
		10: {},
		14: {},
		21: {},
		25: {},
		37: {},
		40: {},
		43: {},
		46: {},
		48: {},
		53: {},
		55: {},
		57: {},
		59: {},
	},

	// STATE TO TOKEN MAPPING
	Tokens: map[t.State]scanner.Symbol{
		3:  scanner.DIV,
		6:  scanner.INLINECMT,
		8:  scanner.BLOCKCMT,
		10: scanner.ASSIGN,
		11: scanner.EQ,
		12: scanner.PLUS,
		14: scanner.MINUS,
		15: scanner.ARROW,
		16: scanner.OR,
		17: scanner.AND,
		18: scanner.NOT,
		19: scanner.MULT,
		21: scanner.LT,
		22: scanner.NOTEQ,
		23: scanner.LEQ,
		25: scanner.GT,
		26: scanner.GEQ,
		27: scanner.OPENPAR,
		28: scanner.CLOSEPAR,
		29: scanner.OPENCUBR,
		30: scanner.CLOSECUBR,
		31: scanner.OPENSQBR,
		32: scanner.CLOSESQBR,
		33: scanner.SEMI,
		34: scanner.COMMA,
		35: scanner.DOT,
		37: scanner.COLON,
		38: scanner.COLONCOLON,
		40: scanner.ID,
		43: scanner.INTNUM,
		46: scanner.FLOATNUM,
		53: scanner.FLOATNUM,
		48: scanner.INVALIDNUM,
		55: scanner.INVALIDNUM,
		57: scanner.INVALIDNUM,
		59: scanner.INVALIDIDENTIFIER,
	},

	// WHICH SYMBOLS COUNT AS tabledrivenscanner.LETTERS
	Letters: map[rune]struct{}{
		'a': {},
		'b': {},
		'c': {},
		'd': {},
		'e': {},
		'f': {},
		'g': {},
		'h': {},
		'i': {},
		'j': {},
		'k': {},
		'l': {},
		'm': {},
		'n': {},
		'o': {},
		'p': {},
		'q': {},
		'r': {},
		's': {},
		't': {},
		'u': {},
		'v': {},
		'w': {},
		'x': {},
		'y': {},
		'z': {},

		'A': {},
		'B': {},
		'C': {},
		'D': {},
		'E': {},
		'F': {},
		'G': {},
		'H': {},
		'I': {},
		'J': {},
		'K': {},
		'L': {},
		'M': {},
		'N': {},
		'O': {},
		'P': {},
		'Q': {},
		'R': {},
		'S': {},
		'T': {},
		'U': {},
		'V': {},
		'W': {},
		'X': {},
		'Y': {},
		'Z': {},
	},
}
